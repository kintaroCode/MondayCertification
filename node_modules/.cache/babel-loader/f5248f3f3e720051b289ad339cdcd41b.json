{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isrrael.rios\\\\view_board_certification\\\\src\\\\App.js\";\nimport React from \"react\";\nimport mondaySdk from \"monday-sdk-js\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2MDg0Njc5MCwidWlkIjozMDMxOTI1MCwiaWFkIjoiMjAyMi0wNS0xN1QwMToxNzowNC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6NzcxNzE2NywicmduIjoidXNlMSJ9.X7R9ymORVX0CcbbBotMLdk_VjPmjfBWszsrkAvhUa3s\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.state = {\n      cities: [],\n      setData: {},\n      settings: {},\n      myData: {\n        boards: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    var citiesAux = [];\n    monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}').then(res => {\n      this.setState({\n        myData: res.data\n      });\n      console.log(res.data.boards[0]);\n    });\n    this.state.myData.boards.map(board => {\n      board.items.map(item => citiesAux.push(item.column_values[3].text));\n    });\n    console.log(citiesAux);\n  } //console.log(this.state.myData.boards)}\n  // const getWeather = async() =>\n  //   { let res = await monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}');\n  //       res.data.boards.map(async (board) => {\n  //         board.items.forEach( async (item) => {\n  //           await  citiesAux.push(item.column_values[3].text)\n  //           ((citiesAux) => { this.setState({cities:citiesAux})})\n  //           console.log(this.state.cities)\n  //         })})}            \n  //         // let json = await fetch(`http://api.weatherapi.com/v1/current.json?key=c156f7f2a3d84ae0861121630223006&q=${item.column_values[3].text}&aqi=no`)\n  //   json = await json.json();\n  //   console.log(json);\n  //   let city={                            \n  //     name: json.location.name,\n  //     localtime: json.location.localtime,\n  //     temperaturaC:json.current.temp_c,\n  //     temperaturaF:json.current.temp_f,\n  //     weatherIcon:json.current.condition.icon\n  // //   };\n  //   let cities =[...this.state.cities, city]\n  //     this.setState({cities});\n  //     console.log(cities)\n  // getWeather();\n\n\n  render() {\n    const {\n      myData\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // <div className=\"App\">\n      //   <div className=\"container\">\n      //     <div className=\"row\">\n      //       {JSON.stringify(this.state.myData)}\n      //       {this.state.myData.boards}\n      //       {console.log(myData.boards)}\n      //       <div className=\"col-md-4\">  \n      //         {/* {\n      //           cities.length === 0? (<h3>Loading . . .</h3> ) :\n      //           cities.map((el) => (\n      //             <div className=\"cardsRow\">\n      //               <WeatherCard className=\"cards\" key={el.name} name={el.name} temp_c={el.temp_c} temp_f={el.temp_f}\n      //                         icon={el.weatherIcon} localtime={el.localtime}/>\n      //             </div>          \n      //           ))\n      //         }        */}\n      //       </div>\n      //         {/* {myData.boards.map( (board) => {\n      //           board.items.map((item) => cities.push(item.column_values[3].text) )})} */}\n      //     </div>\n      //   </div>\n      _jsxDEV(\"div\", {\n        children: [\"Jola \", JSON.stringify(myData.boards), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }, this)\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","mondaySdk","WeatherCard","monday","setToken","App","Component","constructor","props","state","cities","setData","settings","myData","boards","componentDidMount","citiesAux","api","then","res","setState","data","console","log","map","board","items","item","push","column_values","text","render","JSON","stringify"],"sources":["C:/Users/isrrael.rios/view_board_certification/src/App.js"],"sourcesContent":["import React from \"react\";\nimport mondaySdk from \"monday-sdk-js\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport \"./App.css\"\n\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2MDg0Njc5MCwidWlkIjozMDMxOTI1MCwiaWFkIjoiMjAyMi0wNS0xN1QwMToxNzowNC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6NzcxNzE2NywicmduIjoidXNlMSJ9.X7R9ymORVX0CcbbBotMLdk_VjPmjfBWszsrkAvhUa3s\")\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Default state\n    this.state = {\n      cities: [],\n      setData: {},\n      settings: {},\n      myData: { boards: [] }\n    };    \n  }\n  \n  componentDidMount() {     \n    var citiesAux =[];\n\n    monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}')\n    .then((res) => { this.setState({myData:res.data});\n                      console.log(res.data.boards[0]);})\n\n    this.state.myData.boards.map( (board) => {\n      board.items.map((item) =>  citiesAux.push(item.column_values[3].text) )})\n    \n    console.log(citiesAux)\n    }\n    \n    //console.log(this.state.myData.boards)}\n    // const getWeather = async() =>\n    //   { let res = await monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}');\n    //       res.data.boards.map(async (board) => {\n    //         board.items.forEach( async (item) => {\n    //           await  citiesAux.push(item.column_values[3].text)\n    //           ((citiesAux) => { this.setState({cities:citiesAux})})\n    //           console.log(this.state.cities)\n    //         })})}            \n    //         // let json = await fetch(`http://api.weatherapi.com/v1/current.json?key=c156f7f2a3d84ae0861121630223006&q=${item.column_values[3].text}&aqi=no`)\n            //   json = await json.json();\n            //   console.log(json);\n            //   let city={                            \n            //     name: json.location.name,\n            //     localtime: json.location.localtime,\n            //     temperaturaC:json.current.temp_c,\n            //     temperaturaF:json.current.temp_f,\n            //     weatherIcon:json.current.condition.icon\n            // //   };\n            //   let cities =[...this.state.cities, city]\n            //     this.setState({cities});\n            //     console.log(cities)\n    \n\n    // getWeather();\n  \n  \n  render() {     \n\n    const { myData } = this.state;\n    return (\n      // <div className=\"App\">\n      //   <div className=\"container\">\n      //     <div className=\"row\">\n      //       {JSON.stringify(this.state.myData)}\n      //       {this.state.myData.boards}\n      //       {console.log(myData.boards)}\n      //       <div className=\"col-md-4\">  \n      //         {/* {\n      //           cities.length === 0? (<h3>Loading . . .</h3> ) :\n      //           cities.map((el) => (\n      //             <div className=\"cardsRow\">\n      //               <WeatherCard className=\"cards\" key={el.name} name={el.name} temp_c={el.temp_c} temp_f={el.temp_f}\n      //                         icon={el.weatherIcon} localtime={el.localtime}/>\n      //             </div>          \n      //           ))\n      //         }        */}\n        \n      //       </div>\n                \n      //         {/* {myData.boards.map( (board) => {\n      //           board.items.map((item) => cities.push(item.column_values[3].text) )})} */}\n        \n      //     </div>\n      //   </div>\n     <div>Jola {JSON.stringify(myData.boards)} </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AACAE,MAAM,CAACC,QAAP,CAAgB,uNAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;EAChCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN,EADiB,CAEjB;;IACA,KAAKC,KAAL,GAAa;MACXC,MAAM,EAAE,EADG;MAEXC,OAAO,EAAE,EAFE;MAGXC,QAAQ,EAAE,EAHC;MAIXC,MAAM,EAAE;QAAEC,MAAM,EAAE;MAAV;IAJG,CAAb;EAMD;;EAEDC,iBAAiB,GAAG;IAClB,IAAIC,SAAS,GAAE,EAAf;IAEAb,MAAM,CAACc,GAAP,CAAW,kFAAX,EACCC,IADD,CACOC,GAAD,IAAS;MAAE,KAAKC,QAAL,CAAc;QAACP,MAAM,EAACM,GAAG,CAACE;MAAZ,CAAd;MACCC,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAJ,CAASP,MAAT,CAAgB,CAAhB,CAAZ;IAAiC,CAFnD;IAIA,KAAKL,KAAL,CAAWI,MAAX,CAAkBC,MAAlB,CAAyBU,GAAzB,CAA+BC,KAAD,IAAW;MACvCA,KAAK,CAACC,KAAN,CAAYF,GAAZ,CAAiBG,IAAD,IAAWX,SAAS,CAACY,IAAV,CAAeD,IAAI,CAACE,aAAL,CAAmB,CAAnB,EAAsBC,IAArC,CAA3B;IAAwE,CAD1E;IAGAR,OAAO,CAACC,GAAR,CAAYP,SAAZ;EACC,CAvB6B,CAyB9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACQ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGR;;;EAGFe,MAAM,GAAG;IAEP,MAAM;MAAElB;IAAF,IAAa,KAAKJ,KAAxB;IACA;MAAA;MACE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MAEA;MACA;MAEA;MACA;MACD;QAAA,oBAAWuB,IAAI,CAACC,SAAL,CAAepB,MAAM,CAACC,MAAtB,CAAX;MAAA;QAAA;QAAA;QAAA;MAAA;IAzBD;EA2BD;;AAlF+B;;AAqFlC,eAAeT,GAAf"},"metadata":{},"sourceType":"module"}