{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isrrael.rios\\\\view_board_certification\\\\src\\\\App.js\";\nimport React from \"react\";\nimport mondaySdk from \"monday-sdk-js\";\nimport WeatherCard from \"./WeatherCard\";\nimport \"bulma/css/bulma.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2MDg0Njc5MCwidWlkIjozMDMxOTI1MCwiaWFkIjoiMjAyMi0wNS0xN1QwMToxNzowNC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6NzcxNzE2NywicmduIjoidXNlMSJ9.X7R9ymORVX0CcbbBotMLdk_VjPmjfBWszsrkAvhUa3s\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.state = {\n      citiesFromTable: [],\n      citiesWithWeather: [],\n      setData: {},\n      settings: {},\n      myData: {\n        boards: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    const getWeather = async () => {\n      let res = await monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}');\n      res.data.boards.map(async board => {\n        board.items.forEach(async item => this.state.citiesFromTable.push(item.column_values[3].text));\n      });\n      getWeather();\n      console.log(this.state.citiesFromTable); //   console.log(item)\n      //   let json = await fetch(`http://api.weatherapi.com/v1/current.json?key=c156f7f2a3d84ae0861121630223006&q=${item.column_values[3].text}&aqi=no`)\n      //     json = await json.json();\n      //     console.log(json);\n      //       let city={                            \n      //         name: json.location.name,\n      //         localtime: json.location.localtime,\n      //         temperaturaC:json.current.temp_c,\n      //         temperaturaF:json.current.temp_f,\n      //         weatherIcon:json.current.condition.icon\n      //   };\n      //   let cities =[...this.state.cities, city]\n      //   this.setState({cities});\n      //   console.log(cities)\n      // })\n      //          });\n    };\n  }\n\n  render() {\n    const {\n      myData\n    } = this.state;\n    const {\n      cities\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-primary\",\n        children: \" hola mi gente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","mondaySdk","WeatherCard","monday","setToken","App","Component","constructor","props","state","citiesFromTable","citiesWithWeather","setData","settings","myData","boards","componentDidMount","getWeather","res","api","data","map","board","items","forEach","item","push","column_values","text","console","log","render","cities"],"sources":["C:/Users/isrrael.rios/view_board_certification/src/App.js"],"sourcesContent":["import React from \"react\";\nimport mondaySdk from \"monday-sdk-js\";\nimport WeatherCard from \"./WeatherCard\";\nimport \"bulma/css/bulma.min.css\"\n\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2MDg0Njc5MCwidWlkIjozMDMxOTI1MCwiaWFkIjoiMjAyMi0wNS0xN1QwMToxNzowNC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6NzcxNzE2NywicmduIjoidXNlMSJ9.X7R9ymORVX0CcbbBotMLdk_VjPmjfBWszsrkAvhUa3s\")\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Default state\n    this.state = {\n      citiesFromTable: [],\n      citiesWithWeather:[],\n      setData: {},\n      settings: {},\n      myData: { boards: [] }\n    };\n    \n  }\n  \n  componentDidMount() {   \n    const getWeather = async() =>\n      { let res = await monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}');\n          res.data.boards.map(async (board) => {\n          board.items.forEach( async (item) => this.state.citiesFromTable.push(item.column_values[3].text))})\n            \n          \n      getWeather();\n                          \n        console.log(this.state.citiesFromTable);                  \n                          \n                        //   console.log(item)\n                        //   let json = await fetch(`http://api.weatherapi.com/v1/current.json?key=c156f7f2a3d84ae0861121630223006&q=${item.column_values[3].text}&aqi=no`)\n                        //     json = await json.json();\n                        //     console.log(json);\n                        //       let city={                            \n                        //         name: json.location.name,\n                        //         localtime: json.location.localtime,\n                        //         temperaturaC:json.current.temp_c,\n                        //         temperaturaF:json.current.temp_f,\n                        //         weatherIcon:json.current.condition.icon\n                        //   };\n                        //   let cities =[...this.state.cities, city]\n                        //   this.setState({cities});\n                        //   console.log(cities)\n                        // })\n//          });\n      };\n\n  }\n  \n  render() {    \n    const { myData } = this.state;   \n    const { cities } = this.state;\n    return (\n      <div className=\"App\">\n        {/* {\n          cities.length === 0? (<h3>Loading . . .</h3> ) :\n           cities.map((el) => (\n            <WeatherCard key={el.name} name={el.name} temp_c={el.temp_c} temp_f={el.temp_f}\n                        icon={el.weatherIcon} localtime={el.localtime}/>\n           ))\n        }         */}\n        <div className=\"btn btn-primary\"> hola mi gente</div>        \n        <div>\n      \n        {/*          \n        {myData.boards.map( (board) => {\n          board.items.map((item) => cities.push(item.column_values[3].text) )})}\n         */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,yBAAP;;AAEA,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AACAE,MAAM,CAACC,QAAP,CAAgB,uNAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;EAChCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN,EADiB,CAEjB;;IACA,KAAKC,KAAL,GAAa;MACXC,eAAe,EAAE,EADN;MAEXC,iBAAiB,EAAC,EAFP;MAGXC,OAAO,EAAE,EAHE;MAIXC,QAAQ,EAAE,EAJC;MAKXC,MAAM,EAAE;QAAEC,MAAM,EAAE;MAAV;IALG,CAAb;EAQD;;EAEDC,iBAAiB,GAAG;IAClB,MAAMC,UAAU,GAAG,YACjB;MAAE,IAAIC,GAAG,GAAG,MAAMf,MAAM,CAACgB,GAAP,CAAW,kFAAX,CAAhB;MACED,GAAG,CAACE,IAAJ,CAASL,MAAT,CAAgBM,GAAhB,CAAoB,MAAOC,KAAP,IAAiB;QACrCA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAqB,MAAOC,IAAP,IAAgB,KAAKhB,KAAL,CAAWC,eAAX,CAA2BgB,IAA3B,CAAgCD,IAAI,CAACE,aAAL,CAAmB,CAAnB,EAAsBC,IAAtD,CAArC;MAAkG,CADlG;MAIJX,UAAU;MAERY,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,eAAvB,EAPF,CASkB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACxB;IACO,CA1BH;EA4BD;;EAEDqB,MAAM,GAAG;IACP,MAAM;MAAEjB;IAAF,IAAa,KAAKL,KAAxB;IACA,MAAM;MAAEuB;IAAF,IAAa,KAAKvB,KAAxB;IACA,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBAQE;QAAK,SAAS,EAAC,iBAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF,eASE;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAmBD;;AAnE+B;;AAsElC,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}