{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isrrael.rios\\\\view_board_certification\\\\src\\\\App.js\";\nimport React from \"react\";\nimport mondaySdk from \"monday-sdk-js\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2MDg0Njc5MCwidWlkIjozMDMxOTI1MCwiaWFkIjoiMjAyMi0wNS0xN1QwMToxNzowNC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6NzcxNzE2NywicmduIjoidXNlMSJ9.X7R9ymORVX0CcbbBotMLdk_VjPmjfBWszsrkAvhUa3s\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.CallApiWather = myData => {\n      myData.forEach(element => {\n        fetch(`http://api.weatherapi.com/v1/current.json?key=c156f7f2a3d84ae0861121630223006&q=${element}&aqi=no`).then(res => res.json()).then(json => console.log(json));\n      });\n    };\n\n    this.state = {\n      cities: [],\n      setData: {},\n      settings: {},\n      myData: {\n        boards: []\n      }\n    };\n  }\n\n  aConsola(data) {\n    data.forEach(el => console.log(el));\n  }\n\n  componentDidMount() {\n    monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}').then(res => {\n      this.setState({\n        myData: res.data\n      });\n    });\n    this.aConsola(this.state.myData.boards);\n    this.CallApiWather(this.state.myData.boards);\n  } //console.log(res.data.boards[0]);})      \n  //console.log(this.state.myData.boards)}\n  // const getWeather = async() =>\n  //   { let res = await monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}');\n  //       res.data.boards.map(async (board) => {\n  //         board.items.forEach( async (item) => {\n  //           await  citiesAux.push(item.column_values[3].text)\n  //           ((citiesAux) => { this.setState({cities:citiesAux})})\n  //           console.log(this.state.cities)\n  //         })})}            \n  //         // let json = await fetch(`http://api.weatherapi.com/v1/current.json?key=c156f7f2a3d84ae0861121630223006&q=${item.column_values[3].text}&aqi=no`)\n  //   json = await json.json();\n  //   console.log(json);\n  //   let city={                            \n  //     name: json.location.name,\n  //     localtime: json.location.localtime,\n  //     temperaturaC:json.current.temp_c,\n  //     temperaturaF:json.current.temp_f,\n  //     weatherIcon:json.current.condition.icon\n  // //   };\n  //   let cities =[...this.state.cities, city]\n  //     this.setState({cities});\n  //     console.log(cities)     \n  // getWeather();  \n\n\n  render() {\n    let citiesAux = [];\n    const {\n      myData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [JSON.stringify(this.state.myData), this.state.myData.boards, console.log(myData.boards), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: myData.boards.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Loading . . .\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 52\n            }, this) : myData.boards.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardsRow\",\n              children: /*#__PURE__*/_jsxDEV(WeatherCard, {\n                className: \"cards\",\n                name: el.name,\n                temp_c: el.temp_c,\n                temp_f: el.temp_f,\n                icon: el.weatherIcon,\n                localtime: el.localtime\n              }, el.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), console.log(\"hola\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/* //        const { myData } = this.state;\n//         return (\n//       <div className=\"App\">\n//        const citiesAux =[];        \n//         <div className=\"container\">\n//           <div className=\"row\">\n//             {JSON.stringify(this.state.myData)}\n//             {this.state.myData.boards}\n//             {console.log(myData.boards)}\n//             <div className=\"col-md-4\">  \n//               {\n//                 cities.length === 0? (<h3>Loading . . .</h3> ) :\n//                 cities.map((el) => (\n//                   <div className=\"cardsRow\">\n//                     <WeatherCard className=\"cards\" key={el.name} name={el.name} temp_c={el.temp_c} temp_f={el.temp_f}\n//                               icon={el.weatherIcon} localtime={el.localtime}/>\n//                   </div>          \n//                 ))\n//               }       \n// {/*         \n//       //       <s\n      \n                \n      \n//       //     </div>\n//       //   </div>\n//       <div>\n//         {JSON.stringify(myData.boards)}\n//         { myData.boards.map( (board) => {\n//         board.items.map((item) => citiesAux.push(item.column_values[3].text) )})} \n//         {\n//           citiesAux.forEach((el) =>(\n//             <WeatherCard data={el}> </WeatherCard>           \n//           ))\n//         }\n//        {/* {console.log(citiesAux)} \n//        {console.log(this.state.cities)}  */\n\n\nexport default App;","map":{"version":3,"names":["React","mondaySdk","WeatherCard","monday","setToken","App","Component","constructor","props","CallApiWather","myData","forEach","element","fetch","then","res","json","console","log","state","cities","setData","settings","boards","aConsola","data","el","componentDidMount","api","setState","render","citiesAux","JSON","stringify","length","map","name","temp_c","temp_f","weatherIcon","localtime"],"sources":["C:/Users/isrrael.rios/view_board_certification/src/App.js"],"sourcesContent":["import React from \"react\";\nimport mondaySdk from \"monday-sdk-js\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport \"./App.css\";\n\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjE2MDg0Njc5MCwidWlkIjozMDMxOTI1MCwiaWFkIjoiMjAyMi0wNS0xN1QwMToxNzowNC4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6NzcxNzE2NywicmduIjoidXNlMSJ9.X7R9ymORVX0CcbbBotMLdk_VjPmjfBWszsrkAvhUa3s\")\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Default state\n    this.state = {\n      cities: [],\n      setData: {},\n      settings: {},\n      myData: { boards: [] }\n    };    \n  }\n\n  \n  CallApiWather = (myData) =>{\n    myData.forEach(element => {\n      fetch(`http://api.weatherapi.com/v1/current.json?key=c156f7f2a3d84ae0861121630223006&q=${element}&aqi=no`)\n      .then(res => res.json())\n      .then(json => console.log(json))\n    });\n  }\n  \n  aConsola(data){\n    data.forEach(el => console.log(el))\n  }\n\n\n\n  componentDidMount() {         \n    monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}')\n    .then((res) => { this.setState({myData:res.data})})\n\n    this.aConsola(this.state.myData.boards)\n\n    this.CallApiWather(this.state.myData.boards);\n\n  }\n\n\n    //console.log(res.data.boards[0]);})      \n      //console.log(this.state.myData.boards)}\n      // const getWeather = async() =>\n      //   { let res = await monday.api('query { boards( ids : 2664704591 ) { items { id : name column_values { text }}}}');\n      //       res.data.boards.map(async (board) => {\n        //         board.items.forEach( async (item) => {\n          //           await  citiesAux.push(item.column_values[3].text)\n          //           ((citiesAux) => { this.setState({cities:citiesAux})})\n    //           console.log(this.state.cities)\n    //         })})}            \n    //         // let json = await fetch(`http://api.weatherapi.com/v1/current.json?key=c156f7f2a3d84ae0861121630223006&q=${item.column_values[3].text}&aqi=no`)\n    //   json = await json.json();\n    //   console.log(json);\n    //   let city={                            \n      //     name: json.location.name,\n      //     localtime: json.location.localtime,\n      //     temperaturaC:json.current.temp_c,\n      //     temperaturaF:json.current.temp_f,\n      //     weatherIcon:json.current.condition.icon\n      // //   };\n        //   let cities =[...this.state.cities, city]\n      //     this.setState({cities});\n      //     console.log(cities)     \n      // getWeather();  \n       \n      render(){    \n        let citiesAux =[];        \n        const { myData } = this.state;\n        return(           \n            <div className=\"App\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  {JSON.stringify(this.state.myData)}\n                  {this.state.myData.boards}\n                  {console.log(myData.boards)}\n                  <div className=\"col-md-4\">  \n                    {\n                      myData.boards.length === 0? (<h3>Loading . . .</h3> ) :\n                      myData.boards.map((el) =>(                        \n                      <div className=\"cardsRow\">\n                        <WeatherCard className=\"cards\" key={el.name} name={el.name} temp_c={el.temp_c} temp_f={el.temp_f}\n                               icon={el.weatherIcon} localtime={el.localtime}/>\n                      </div>))\n                    }       \n                  </div>\n                </div>\n              </div>\n              {console.log(\"hola\")}\n            </div>\n            )\n        \n      }\n}\n\n\n\n/* //        const { myData } = this.state;\n//         return (\n//       <div className=\"App\">\n//        const citiesAux =[];        \n//         <div className=\"container\">\n//           <div className=\"row\">\n//             {JSON.stringify(this.state.myData)}\n//             {this.state.myData.boards}\n//             {console.log(myData.boards)}\n//             <div className=\"col-md-4\">  \n//               {\n//                 cities.length === 0? (<h3>Loading . . .</h3> ) :\n//                 cities.map((el) => (\n//                   <div className=\"cardsRow\">\n//                     <WeatherCard className=\"cards\" key={el.name} name={el.name} temp_c={el.temp_c} temp_f={el.temp_f}\n//                               icon={el.weatherIcon} localtime={el.localtime}/>\n//                   </div>          \n//                 ))\n//               }       \n// {/*         \n//       //       <s\n      \n                \n      \n//       //     </div>\n//       //   </div>\n//       <div>\n//         {JSON.stringify(myData.boards)}\n//         { myData.boards.map( (board) => {\n//         board.items.map((item) => citiesAux.push(item.column_values[3].text) )})} \n//         {\n//           citiesAux.forEach((el) =>(\n//             <WeatherCard data={el}> </WeatherCard>           \n//           ))\n//         }\n//        {/* {console.log(citiesAux)} \n//        {console.log(this.state.cities)}  */\n     \n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}